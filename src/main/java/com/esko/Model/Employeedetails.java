package com.esko.Model;
// Generated May 19, 2017 12:28:57 PM by Hibernate Tools 5.1.0.Alpha1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.ColumnDefault;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonManagedReference;

/**
 * Employeedetails generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "employeedetails", catalog = "spandana")
public class Employeedetails implements java.io.Serializable {

	private String employeeId;
	@JsonManagedReference
	private Departmentdetails departmentdetails;
	private String fullName;
	private int compOffCredit = 0;
	private int wfhDays = 2;
	private String wfhEligibility = "No";
	private String deleted;
	@JsonBackReference
	private Set<Employeemanagerdetails> employeemanagerdetailsesForManagerIdEm = new HashSet<Employeemanagerdetails>(0);
	@JsonBackReference
	private Set<Leavefeed> leavefeeds = new HashSet<Leavefeed>(0);
	@JsonBackReference
	private Set<Employeemanagerdetails> employeemanagerdetailsesForEmployeeIdEm = new HashSet<Employeemanagerdetails>(
			0);
	@JsonBackReference
	private Set<Attendancefeed> attendancefeeds = new HashSet<Attendancefeed>(0);

	public Employeedetails() {
	}

	public Employeedetails(String employeeId, Departmentdetails departmentdetails, String fullName,String deleted) {
		this.employeeId = employeeId;
		this.departmentdetails = departmentdetails;
		this.fullName = fullName;
		this.deleted=deleted;
	}

	public Employeedetails(String employeeId, Departmentdetails departmentdetails, String fullName,String deleted, int compOffCredit,
			int wfhDays, String wfhEligibility, Set<Employeemanagerdetails> employeemanagerdetailsesForManagerIdEm,
			Set<Leavefeed> leavefeeds, Set<Employeemanagerdetails> employeemanagerdetailsesForEmployeeIdEm,
			Set<Attendancefeed> attendancefeeds) {
		this.employeeId = employeeId;
		this.departmentdetails = departmentdetails;
		this.fullName = fullName;
		this.compOffCredit = compOffCredit;
		this.wfhDays = wfhDays;
		this.wfhEligibility = wfhEligibility;
		this.employeemanagerdetailsesForManagerIdEm = employeemanagerdetailsesForManagerIdEm;
		this.leavefeeds = leavefeeds;
		this.employeemanagerdetailsesForEmployeeIdEm = employeemanagerdetailsesForEmployeeIdEm;
		this.attendancefeeds = attendancefeeds;
		this.deleted = deleted;
	}

	
	public Employeedetails(String employeeId, Departmentdetails departmentdetails, String fullName,String deleted,
			String wfhEligibility) {
		super();
		this.employeeId = employeeId;
		this.departmentdetails = departmentdetails;
		this.fullName = fullName;
		this.wfhEligibility = wfhEligibility;
		this.deleted = deleted;
	}

	@Id
	@Column(name = "employeeId", unique = true, nullable = false, length = 30)
	public String getEmployeeId() {
		return this.employeeId;
	}

	public void setEmployeeId(String employeeId) {
		this.employeeId = employeeId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "departmentIdED", nullable = false)
	public Departmentdetails getDepartmentdetails() {
		return this.departmentdetails;
	}

	public void setDepartmentdetails(Departmentdetails departmentdetails) {
		this.departmentdetails = departmentdetails;
	}

	@Column(name = "fullName", nullable = false, length = 200)
	public String getFullName() {
		return this.fullName;
	}

	public void setFullName(String fullName) {
		this.fullName = fullName;
	}

	@Column(name = "compOffCredit", columnDefinition = "int default 0")
	public int getCompOffCredit() {
		return this.compOffCredit;
	}

	public void setCompOffCredit(int compOffCredit) {
		this.compOffCredit = compOffCredit;
	}

	@Column(name = "wfhDays", columnDefinition = "int default 2")
	public int getWfhDays() {
		return this.wfhDays;
	}

	public void setWfhDays(int wfhDays) {
		this.wfhDays = wfhDays;
	}

	@Column(name = "wfhEligibility")
	@ColumnDefault("'No'")
	public String getWfhEligibility() {
		return this.wfhEligibility;
	}

	public void setWfhEligibility(String wfhEligibility) {
		this.wfhEligibility = wfhEligibility;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employeedetailsByManagerIdEm")
	public Set<Employeemanagerdetails> getEmployeemanagerdetailsesForManagerIdEm() {
		return this.employeemanagerdetailsesForManagerIdEm;
	}

	public void setEmployeemanagerdetailsesForManagerIdEm(
			Set<Employeemanagerdetails> employeemanagerdetailsesForManagerIdEm) {
		this.employeemanagerdetailsesForManagerIdEm = employeemanagerdetailsesForManagerIdEm;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employeedetails")
	public Set<Leavefeed> getLeavefeeds() {
		return this.leavefeeds;
	}

	public void setLeavefeeds(Set<Leavefeed> leavefeeds) {
		this.leavefeeds = leavefeeds;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employeedetailsByEmployeeIdEm")
	public Set<Employeemanagerdetails> getEmployeemanagerdetailsesForEmployeeIdEm() {
		return this.employeemanagerdetailsesForEmployeeIdEm;
	}

	public void setEmployeemanagerdetailsesForEmployeeIdEm(
			Set<Employeemanagerdetails> employeemanagerdetailsesForEmployeeIdEm) {
		this.employeemanagerdetailsesForEmployeeIdEm = employeemanagerdetailsesForEmployeeIdEm;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employeedetails")
	public Set<Attendancefeed> getAttendancefeeds() {
		return this.attendancefeeds;
	}

	public void setAttendancefeeds(Set<Attendancefeed> attendancefeeds) {
		this.attendancefeeds = attendancefeeds;
	}
	
	@Column(name = "deleted", nullable = false, length = 45)
	public String getDeleted() {
		return deleted;
	}

	public void setDeleted(String deleted) {
		this.deleted = deleted;
	}
	
	

}
